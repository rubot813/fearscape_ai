#ifndef TETRIS_AI_HPP
#define TETRIS_AI_HPP

#include "pixel_field.hpp"
#include "figure.hpp"

// Класс описывает логику искусственного интеллекта для игры в тетрис и подобные
// Его задача - получить текущую фигуру и состояние поля, и в соответствии с алгоритмом выдать структуру move_variant_s
// которая описывает куда и как положить заданную фигуру
class tetris_ai_c {
public:
		tetris_ai_c( void );
		~tetris_ai_c( void );

		// Структура варианта перемещения фигуры
		struct move_variant_s {
			// Позиция относительно начального положения фигуры ( на верху экрана и по центру )
			// Положительное значение - перемещение направо, отрицательное значение - перемещение налево
			// >0 перемещение на pos клеток направо
			// <0 перемешение на -pos клеток налево
			int8_t	position;

			// 0 - без вращения
			// 1 - 90 градусов по часовой
			// 2 - 180 градусов по часовой
			// 3 - 270 градусов по часовой
			uint8_t rotation;
		};

		// Структура высот поля
		struct height_s {
			uint8_t val[ global_field_size_x ];
		};

		// Метод возвращает текущее значение высот поля
		height_s* get_current_height( void );

		// Метод просчитывает наилучший ход без стратегии
		// Ищет вариант постановки фигуры без создания отверстий ( >:D )
		move_variant_s ai_calc_bm_noholes( cell_field_c *cell_field, figure_c *figure );

	private:

		// Высота последнего посчитанного поля
		// Обновляется после вызовов методов ai_calc_
		height_s *_height;

};

#endif // TETRIS_AI_HPP
